@startuml
skinparam linetype ortho
skinparam classAttributeIconSize 0

' ================= Layer 0: Ecosystem =================

class Ecosystem {
    - networks : List<Network>
    - user : Role
}

class Network {
    - name : String
    - enterprises : List<Enterprise>
}

Ecosystem "1" --> "*" Network : manages

' ================= Layer 1: Enterprise & Org =================

class Enterprise {
    - purchaseRequests : List<PurchaseRequest>
    - shipments : List<Shipment>
    - enterpriseId : String
    - name : String
    - nationality : String
    - type : EnterpriseType
    - organizations : List<Organization>
    + addPurchaseRequest(pr : PurchaseRequest) : void
    + getShipmentsByVendor(vendorId : String) : List<Shipment>
    + getAllUserAccounts() : List<UserAccount>
}

class Organization {
    - name : String
    - userAccounts : List<UserAccount>
}

Network "1" --> "*" Enterprise : contains
Enterprise "1" --> "*" Organization : contains
Organization "1" --> "*" UserAccount : manages

' ================= Layer 2: Users =================
class UserAccount {
    - username : String
    - password : String
    - role : Role
}

enum Role {
    ADMIN
    IT_ADMIN
    PROCUREMENT_SPECIALIST
    IT_ENGINEER
    FINANCE_ANALYST
    LEGAL_REVIEWER
    WAREHOUSE_SPECIALIST
    SALES_MANAGER
    SHIPPING_COORDINATOR
}

UserAccount --> Role

' ================= Layer 3: WorkRequest Superclass =================

enum RequestStatus {
    PENDING
    APPROVED
    REJECTED
    COMPLETED
}

class WorkRequest {
    - id : String
    - sender : UserAccount
    - receiver : UserAccount
    - requestDate : Date
    - status : RequestStatus
}

WorkRequest --> RequestStatus

WorkRequest <|-- PurchaseRequest
WorkRequest <|-- RFQRequest
WorkRequest <|-- PORequest
WorkRequest <|-- ContractReviewRequest
WorkRequest <|-- DeliveryRequest
WorkRequest <|-- ProcurementClosure

' ================= Layer 4: WorkRequest Subclasses =================
class PurchaseRequest {
    - description : String
    - products : ProductCatalog
    - estimatedBudget : double
}

class RFQRequest {
    - linkedPR : PurchaseRequest
    - vendors : List<Enterprise>
}

class PORequest {
    - approvedQuotation : Quotation
    - purchaseOrder : PurchaseOrder
}

' File by Vendor (TSMC), Update approved & contract signed field
class ContractReviewRequest {
    - quotation : Quotation
    - contract : Contract
}

class DeliveryRequest {
    - product : Product
    - logisticsPartner : Enterprise
    - shipment : Shipment
}

class ProcurementClosure {
    - pr : PurchaseRequest
    - receipt : DeliveryReceipt
}

' ================= Layer 5: Supporting Domain Models =================
class Quotation {
    - vendor : Enterprise
    - price : double
    - spec : String
    - selected : boolean
}

class PurchaseOrder {
    - poNumber : String
    - quotation : Quotation
    - totalAmount : double
    - issueDate : Date
    - status : POStatus
}

class Contract {
    - contractId : String
    - quotation : Quotation
    - enterprise : Enterprise
    - terms : String
    - effectiveDate : Date
    - signed : boolean
}

class Shipment {
    - trackingNumber : String
    - product : Product
    - quantity : int
    - shipDate : Date
    - expectedArrival : Date
    - status : ShipmentStatus
}

enum ShipmentStatus {
    PLACED
    IN_TRANSIT
    DELIVERED
}

Shipment --> ShipmentStatus

enum ReceiptStatus {
    PENDING_REVIEW
    COMPLETED
}

class DeliveryReceipt {
    - confirmedBy : UserAccount
    - reviewedBy : UserAccount
    - receivedDate : Date
    - shipmentId : String
    - status : ReceiptStatus
    - conditionNotes : String
}

DeliveryReceipt --> ReceiptStatus

class Spec {
    - specId : String
    - category : String
    - specifications : Map<String, String>
    + getSpecification(key : String) : String
    + setSpecification(key : String, value : String) : void
}

class Product extends Spec {
    - productId : String
    - name : String
    - description : String
    - unitPrice : double
    - quantity : int
}

' ================= Relationships (Flow) =================
RFQRequest --> PurchaseRequest : refers to
RFQRequest --> Enterprise : invites

PORequest --> Quotation : based on
PORequest --> PurchaseOrder : generates

ContractReviewRequest --> Quotation : reviews
ContractReviewRequest --> Contract : creates

DeliveryRequest --> Product : ships
DeliveryRequest --> Enterprise : via logistics
DeliveryRequest --> Shipment : dispatches

ProcurementClosure --> PurchaseRequest : closes
ProcurementClosure --> DeliveryReceipt : confirms

Quotation --> Enterprise : from
PurchaseOrder --> Quotation : derived from
Contract --> Enterprise : with
Contract --> Quotation : based on
Shipment --> Product : includes
@enduml