/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.quotation;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import model.quotation.Quotation;
import model.workqueue.RFQRequest;
import model.procurement.Contract;
import model.procurement.ContractReviewRequest;
import util.NavigationUtil;


/**
 *
 * @author qiyaochen
 */
public class QuotationPanel extends javax.swing.JPanel {
    
    private RFQRequest rfqRequest;

    /**
     * Creates new form QuotationPanel
     */
    public QuotationPanel(RFQRequest rfqRequest) {
        this.rfqRequest = rfqRequest;
        initComponents();
        populateTable();
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) quotationTable.getModel();
        model.setRowCount(0); // clear table

        List<Quotation> list = rfqRequest.getQuotations();
        for (Quotation q : list) {
            Object[] row = new Object[] {
                q.getVendorName(),
                q.getPrice(),
                q.getDescription(),
                q.isSelected()
            };
            model.addRow(row);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        quotationTable = new javax.swing.JTable();
        lbTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        approveBtn = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();

        quotationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vendor", "Price", "Description", "Selected"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(quotationTable);

        lbTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("Quotation Review");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        approveBtn.setBackground(new java.awt.Color(51, 255, 51));
        approveBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        approveBtn.setText("Apporve");
        approveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBtnActionPerformed(evt);
            }
        });

        viewBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        viewBtn.setText("View Details");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(approveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(approveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        NavigationUtil.getInstance().goBack();
    }//GEN-LAST:event_btnBackActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = quotationTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a quotation to view.");
            return;
        }

        Quotation q = rfqRequest.getQuotations().get(selectedRow);
        StringBuilder sb = new StringBuilder();
        sb.append("Vendor: ").append(q.getVendorName()).append("\n");
        sb.append("Price: $").append(q.getPrice()).append("\n");
        sb.append("Description: ").append(q.getDescription()).append("\n");
        sb.append("Selected: ").append(q.isSelected() ? "Yes" : "No");

        JOptionPane.showMessageDialog(this, sb.toString(), "Quotation Details", JOptionPane.INFORMATION_MESSAGE);
    
    }//GEN-LAST:event_viewBtnActionPerformed

    private void approveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = quotationTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a quotation to approve.");
            return;
        }

        Quotation selected = rfqRequest.getQuotations().get(selectedRow);

        // Clear other selections
        for (Quotation q : rfqRequest.getQuotations()) {
            q.setSelected(false);
        }
        selected.setSelected(true);

        // Approve + generate contract
        ContractReviewRequest review = rfqRequest.toContractReviewRequest(selected);
        review.approve();
        Contract contract = review.createContract();

        JOptionPane.showMessageDialog(this, "Contract approved!\nID: " + contract.getContractId());

        populateTable(); // refresh UI
    }//GEN-LAST:event_approveBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveBtn;
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JTable quotationTable;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
