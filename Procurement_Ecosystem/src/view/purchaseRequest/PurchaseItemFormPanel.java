/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.purchaseRequest;

import common.Result;
import common.dto.PurchaseItemDTO;
import common.dto.PurchaseRequestDTO;
import common.dto.SpecDTO;
import controller.procurement.PurchaseRequestController;
import enums.Mode;
import interfaces.IDataRefreshCallback;
import interfaces.IDataRefreshCallbackAware;
import model.procurement.PurchaseItem;
import util.NavigationUtil;
import util.UIUtil;

import java.util.Map;

/**
 *
 * @author tisaac
 */
public class PurchaseItemFormPanel extends javax.swing.JPanel implements IDataRefreshCallbackAware {

    private PurchaseRequestDTO dto;
    private PurchaseItemDTO editingItem;
    private IDataRefreshCallback callback;
    private Mode mode;

    /**
     * Creates new form PurchaseItemFormPanel
     */
    public PurchaseItemFormPanel(PurchaseRequestDTO dto, PurchaseItemDTO editingItem, Mode mode) {
        initComponents();
        this.dto = dto;
        this.editingItem = editingItem;
        this.mode = mode;
        setupListeners();
        configureUIByMode();
    }

    private void setupListeners() {
        btnAdd.addActionListener(e -> handleAddButton());
        btnBack.addActionListener(e -> handleBackButton());
        btnSave.addActionListener(e -> handleSaveButton());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitle = new javax.swing.JLabel();
        lbProductName = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        txtModelNumber = new javax.swing.JTextField();
        lbModelNumber = new javax.swing.JLabel();
        lbCategory = new javax.swing.JLabel();
        txtCategory = new javax.swing.JTextField();
        lbModelNumber2 = new javax.swing.JLabel();
        txtColor = new javax.swing.JTextField();
        lbSize = new javax.swing.JLabel();
        txtSize = new javax.swing.JTextField();
        lbMaterial = new javax.swing.JLabel();
        txtMaterial = new javax.swing.JTextField();
        lbRemarks = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRemarks = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtQuantity = new javax.swing.JTextField();
        lbQuantity = new javax.swing.JLabel();
        lbUnitPrice = new javax.swing.JLabel();
        txtUnitPrice = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        lbTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("New Purchase Item");

        lbProductName.setText("Name");

        lbModelNumber.setText("Model Number");

        lbCategory.setText("Category");

        lbModelNumber2.setText("Color");

        lbSize.setText("Size");

        lbMaterial.setText("Material");

        lbRemarks.setText("Remarks");

        txtRemarks.setColumns(20);
        txtRemarks.setRows(5);
        jScrollPane1.setViewportView(txtRemarks);

        btnAdd.setText("Add");

        btnBack.setText("<<Back");

        lbQuantity.setText("Quantity");

        lbUnitPrice.setText("Unit Price");

        btnSave.setText("Save Changes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addGap(269, 269, 269)
                .addComponent(btnSave)
                .addGap(62, 62, 62))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbRemarks)
                            .addComponent(lbMaterial)
                            .addComponent(lbSize)
                            .addComponent(lbModelNumber2)
                            .addComponent(lbModelNumber)
                            .addComponent(lbProductName)
                            .addComponent(lbCategory))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtProductName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtModelNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCategory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtColor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSize, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaterial, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbUnitPrice)
                                    .addComponent(lbQuantity))
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUnitPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(67, 67, 67))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lbCategory, lbMaterial, lbModelNumber, lbModelNumber2, lbProductName, lbRemarks, lbSize});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCategory, txtColor, txtMaterial, txtModelNumber, txtProductName, txtSize});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbProductName)
                            .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbModelNumber)
                            .addComponent(txtModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbQuantity)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbUnitPrice)
                            .addComponent(txtUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCategory)
                    .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbModelNumber2)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSize)
                    .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaterial)
                    .addComponent(txtMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbRemarks)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnSave))
                .addGap(0, 29, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCategory;
    private javax.swing.JLabel lbMaterial;
    private javax.swing.JLabel lbModelNumber;
    private javax.swing.JLabel lbModelNumber2;
    private javax.swing.JLabel lbProductName;
    private javax.swing.JLabel lbQuantity;
    private javax.swing.JLabel lbRemarks;
    private javax.swing.JLabel lbSize;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbUnitPrice;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtMaterial;
    private javax.swing.JTextField txtModelNumber;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextArea txtRemarks;
    private javax.swing.JTextField txtSize;
    private javax.swing.JTextField txtUnitPrice;
    // End of variables declaration//GEN-END:variables

    private void handleAddButton() {
        PurchaseItemDTO itemDTO = formPurchaseItem(getSpecData());
        Result<PurchaseRequestDTO> prDTO = PurchaseRequestController.getInstance().handlePurchaseItem(dto, itemDTO);
        if (!prDTO.isSuccess()) {
            UIUtil.showError(this, prDTO.getMessage());
            return;
        }
        UIUtil.showInfo(this, prDTO.getMessage());

        // Clear the form fields
        clearFields();
    }

    private void handleBackButton() {
        // Navigate back to the previous screen
        NavigationUtil.getInstance().goBack();
        callback.refreshData();
    }

    private void handleSaveButton() {
        PurchaseItemDTO itemDTO = formPurchaseItem(getSpecData());
        Result<PurchaseRequestDTO> prDTO = PurchaseRequestController.getInstance().handleUpdatePurchaseItem(dto, editingItem, itemDTO);
        if (!prDTO.isSuccess()) {
            UIUtil.showError(this, prDTO.getMessage());
            return;
        }
        UIUtil.showInfo(this, prDTO.getMessage());

        // Set all field to ineditable
        disableAllFields();
    }

    public PurchaseItemDTO formPurchaseItem(SpecDTO spec) {
        String name = txtProductName.getText();
        String quantity = txtQuantity.getText();
        String unitPrice = txtUnitPrice.getText();

        return new PurchaseItemDTO(name, spec, quantity, unitPrice);
    }

    public SpecDTO getSpecData() {
        String modelNumber = txtModelNumber.getText();
        String category = txtCategory.getText();
        String color = txtColor.getText();
        String size = txtSize.getText();
        String material = txtMaterial.getText();
        String remarks = txtRemarks.getText();

        return new SpecDTO(modelNumber, color, size, material, category, remarks);
    }

    private void disableAllFields() {
        UIUtil.setEnabled(
                false,
                txtProductName, txtModelNumber, txtCategory, txtColor, txtSize, txtMaterial, txtRemarks, txtQuantity, txtUnitPrice
        );
    }

    private void clearFields() {
        UIUtil.clearTextComponents(
                txtProductName, txtModelNumber, txtCategory, txtColor, txtSize, txtMaterial, txtRemarks, txtQuantity, txtUnitPrice
        );
    }

    private void configureUIByMode() {
        switch (mode) {
            case ADD -> {
                UIUtil.show(btnAdd);
                UIUtil.hide(btnSave);
                clearFields();
            }
            case UPDATE -> {
                UIUtil.show(btnSave);
                UIUtil.hide(btnAdd);
                populateFields();
            }
        }
    }

    private void populateFields() {
        UIUtil.setTextFields(Map.of(
                        txtProductName, editingItem.getName(),
                        txtModelNumber, editingItem.getSpec().getModelNumber(),
                        txtCategory, editingItem.getSpec().getCategory(),
                        txtColor, editingItem.getSpec().getColor(),
                        txtSize, editingItem.getSpec().getSize(),
                        txtMaterial, editingItem.getSpec().getMaterial(),
                        txtRemarks, editingItem.getSpec().getRemarks(),
                        txtQuantity, editingItem.getQuantity(),
                        txtUnitPrice, editingItem.getUnitPrice()
                )
        );
    }

    @Override
    public void setCallback(IDataRefreshCallback callback) {
        this.callback = callback;
    }
}
