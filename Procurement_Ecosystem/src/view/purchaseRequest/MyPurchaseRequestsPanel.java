/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.purchaseRequest;

import common.AppContext;
import common.Result;
import common.Session;
import controller.procurement.PurchaseRequestController;
import enums.RequestStatus;
import interfaces.IDataRefreshCallback;
import model.procurement.PurchaseRequest;
import model.user.UserAccount;
import util.NavigationUtil;
import util.UIUtil;

import java.util.List;

/**
 *
 * @author tisaac
 */
public class MyPurchaseRequestsPanel extends javax.swing.JPanel implements IDataRefreshCallback {

    private NavigationUtil nu = NavigationUtil.getInstance();
    /**
     * Creates new form MyPurchaseRequestsPanel
     */
    public MyPurchaseRequestsPanel() {
        initComponents();
        setupListeners();

        UIUtil.clearTable(tblPR);
        handleOngoingPR();
    }

    private void setupListeners() {
        btnCreate.addActionListener(e -> handleCreateNewPR());
        btnOngoing.addActionListener(e -> handleOngoingPR());
        btnCompleted.addActionListener(e -> handleCompletedPR());
        btnView.addActionListener(e -> handleViewBtn());
        btnBack.addActionListener(e -> NavigationUtil.getInstance().goBack());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lbTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPR = new javax.swing.JTable();
        btnOngoing = new javax.swing.JButton();
        btnCompleted = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        lbTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("Purchase Request");

        tblPR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "PR Id", "Request Date", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblPR);

        btnOngoing.setText("On Going");

        btnCompleted.setText("Completed");

        btnBack.setText("<<Back");

        btnView.setText("View Status");

        btnCreate.setText("Create New PR");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnOngoing, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOngoing)
                    .addComponent(btnCompleted))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(btnCreate)
                .addGap(42, 42, 42))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCompleted;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnOngoing;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JTable tblPR;
    // End of variables declaration//GEN-END:variables

    private void handleCreateNewPR() {
        CreatePurchaseRequestPanel cpr = new CreatePurchaseRequestPanel();
        cpr.setCallback(() -> refreshData());
        nu.showCard(
                cpr,
                "Create Purchase Request"
        );
    }

    private void handleCompletedPR() {
        // find the completed purchase requests
        Result<List<PurchaseRequest>> result = PurchaseRequestController.getInstance().handleUserPR(AppContext.getUser().getUserId(), RequestStatus.COMPLETED);
        if (!result.isSuccess()) {
            UIUtil.showError(this, result.getMessage());
        }

        refreshPRTable(result.getData());
    }

    private void handleOngoingPR() {
        // find the ongoing purchase requests
        Result<List<PurchaseRequest>> result = PurchaseRequestController.getInstance().handleUserPR(AppContext.getUser().getUserId(), RequestStatus.PENDING);
        if (!result.isSuccess()) {
            UIUtil.showError(this, result.getMessage());
        }

        refreshPRTable(result.getData());
    }

    private void handleViewBtn() {
        PurchaseRequest pr =  UIUtil.getSelectedTableObject(tblPR, 0,
                PurchaseRequest.class, this, "Please select a Purchase Request")
                .orElse(null);

        ProcessPurchaseRequestPanel prp = new ProcessPurchaseRequestPanel(pr, () -> refreshData());
        nu.showCard(prp, "Process Purchase Request");
    }

    private void refreshPRTable(List<PurchaseRequest> data) {
        UIUtil.reloadTable(tblPR, data,
                e -> new Object[] {
                        e,
                        e.getRequestDate(),
                        e.getStatus()
                }
        );
    }

    @Override
    public void refreshData() {
        handleOngoingPR();
    }
}
