/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.purchaseRequest;

import common.dto.PurchaseItemDTO;
import common.dto.PurchaseRequestDTO;
import interfaces.IDataRefreshCallback;
import model.procurement.PurchaseRequest;
import util.NavigationUtil;
import util.UIUtil;

import java.util.List;

/**
 *
 * @author tisaac
 */
public class CreatePurchaseRequestPanel extends javax.swing.JPanel implements IDataRefreshCallback {

    private NavigationUtil nu = NavigationUtil.getInstance();
    private PurchaseRequestDTO prDTO;

    /**
     * Creates new form CreatePurchaseRequestPanel
     */
    public CreatePurchaseRequestPanel() {
        initComponents();
        prDTO = new PurchaseRequestDTO();
        setupListeners();

        // Set up the table model
        reloadPurchaseItemTable(prDTO.getPurchaseItems());
    }

    private void setupListeners() {
        btnAddProduct.addActionListener(e -> handleAddItem());
        btnUpdate.addActionListener(e -> handleItemUpdate());
        btnRemove.addActionListener(e -> handleItemRemove());
        btnSubmit.addActionListener(e -> handleSubmit());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitle = new javax.swing.JLabel();
        lbBudget = new javax.swing.JLabel();
        txtBudget = new javax.swing.JTextField();
        lbUnit = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPurchaseItems = new javax.swing.JTable();
        btnAddProduct = new javax.swing.JButton();
        lbPurchaseItems = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        lbBudget1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtReason = new javax.swing.JTextArea();
        btnUpdate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();

        lbTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("Create New Purchase Request");

        lbBudget.setText("Estimated Budget");

        lbUnit.setText("USD");

        tblPurchaseItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Quantity", "Unit Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPurchaseItems);
        if (tblPurchaseItems.getColumnModel().getColumnCount() > 0) {
            tblPurchaseItems.getColumnModel().getColumn(0).setResizable(false);
            tblPurchaseItems.getColumnModel().getColumn(1).setResizable(false);
            tblPurchaseItems.getColumnModel().getColumn(2).setResizable(false);
        }

        btnAddProduct.setText("Add Product");

        lbPurchaseItems.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        lbPurchaseItems.setText("Purchase Items");

        btnSubmit.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 0, 51));
        btnSubmit.setText("Submit");

        lbBudget1.setText("Reason");

        txtReason.setColumns(20);
        txtReason.setRows(5);
        jScrollPane2.setViewportView(txtReason);

        btnUpdate.setText("Update");

        btnRemove.setText("Remove");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbPurchaseItems)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRemove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAddProduct))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lbBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lbUnit))
                                .addComponent(btnSubmit, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(lbBudget1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lbPurchaseItems)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddProduct)
                            .addComponent(btnUpdate)
                            .addComponent(btnRemove))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbBudget)
                            .addComponent(txtBudget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbUnit))
                        .addGap(18, 18, 18)
                        .addComponent(lbBudget1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                        .addGap(35, 35, 35)
                        .addComponent(btnSubmit)
                        .addGap(154, 154, 154))))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbBudget;
    private javax.swing.JLabel lbBudget1;
    private javax.swing.JLabel lbPurchaseItems;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbUnit;
    private javax.swing.JTable tblPurchaseItems;
    private javax.swing.JTextField txtBudget;
    private javax.swing.JTextArea txtReason;
    // End of variables declaration//GEN-END:variables

    private void handleAddItem() {
        // Navigate to new purchase item form
        PurchaseItemFormPanel prItemForm = new PurchaseItemFormPanel(prDTO);
        prItemForm.setCallback(() -> reloadPurchaseItemTable(prDTO.getPurchaseItems()));
        nu.showCard(prItemForm, "PurchaseItemForm");
    }

    private void handleItemUpdate() {
        UIUtil.getSelectedTableObject(
                tblPurchaseItems, 0, this, "Please select a purchase item to update")
                .ifPresent(item -> {
                    nu.showCard(new PurchaseItemFormPanel(prDTO), "PurchaseItemForm");
                });
    }

    // TODO: Remove button
    private void handleItemRemove() {
        UIUtil.getSelectedTableObject(
                tblPurchaseItems, 0, this, "Please select a purchase item to update")
                .ifPresent(item -> {
                    // remove item from table
                });
    }

    // TODO: Submit button
    private void handleSubmit() {
        // Validate inputs
        // Check if budget is valid
        // Check if purchase items are empty
        // Check if reason is empty

    }

    public void reloadPurchaseItemTable(List<PurchaseItemDTO> purchaseItems) {
        UIUtil.reloadTable(
                tblPurchaseItems,
                purchaseItems,
                e -> new Object[]{
                        e.getName(),
                        e.getQuantity(),
                        e.getUnitPrice()
                });
    }

    @Override
    public void refreshData() {
        reloadPurchaseItemTable(prDTO.getPurchaseItems());
    }
}
